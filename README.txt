# 이게 Firestore고, 이렇게 쓰면 끝 (MVP)

## Firestore가 뭐냐면?
- **Google Firebase**의 **클라우드 데이터베이스**야. (NoSQL)
- 브라우저에서 바로 읽고/쓰기 가능하고, **onSnapshot**으로 **실시간 업데이트**를 받을 수 있어.
- 우리 앱은 이 기능으로 **리셉션 화면에서 누른 버튼 → 처치실 화면이 즉시 반영**되도록 만들었어.
- 과금: 소규모는 무료(Spark). 후에 쓰임새 늘면 요금제 바꿀 수 있음.

## 10분 셋업
1) https://console.firebase.google.com → 새 프로젝트 만들기
2) “웹앱 추가” 클릭 → **앱 닉네임만 입력하고** 생성
3) 나온 **firebaseConfig** 복사 → `display.html`, `reception.html`의
   ```js
   const firebaseConfig = { apiKey:"YOUR_KEY", authDomain:"YOUR_APP.firebaseapp.com", projectId:"YOUR_APP" }
   ```
   여기에 붙여넣기 (세 값만 있으면 동작함)
4) 좌측 Firestore Database → “데이터베이스 만들기” (테스트 모드)
5) 로컬에서 두 파일 더블클릭으로 열거나, Vercel 같은 정적 호스팅에 올리기
   - 리셉션: `/reception.html`
   - 처치실: `/display.html`

## 디버깅을 쉽게 하려고 붙여둔 것
- 화면 하단 **연결 상태 표시(초록/노랑/빨강)** + **연결 테스트 버튼**
- 화면 상단 **에러 박스**: 네트워크/권한/초기화 오류 메시지 그대로 보여줌
- Firestore 콘솔 → 데이터 보기에서 `cases` 컬렉션이 생성되는지 확인

## 기본 사용 흐름
- 리셉션: 처음 한번 **PIN(기본 1234)** 입력 → 12시간 유효 → 환자 추가/상태 변경
- 처치실: 드롭다운에서 환자 선택 → 상태표시, **📣 콜 요청** 버튼
- 콜 요청 오면 리셉션에 큰 알림 + 벨 소리 → “처리완료” 누르면 **카페콜완료**로 자동

## 주의 (MVP니까 간단하게)
- 현재 규칙은 테스트 모드 가정이야. 운영 전엔 **쓰기 제한**은 꼭 강화하자.
- 그래도 “프록시 계층에서 막기” 같은 건 지금 안 해도 됨. 일단 써보고 다음 단계에서 보안 강화하자.

작성일: 2025-09-10
